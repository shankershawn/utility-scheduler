# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle and Docker - Non Prod Deploy

on:
  workflow_run:
    workflows: [ "Java CI with Gradle and Docker - Merge Build" ]
    types:
      - completed
  workflow_dispatch:

permissions:
  contents: read

jobs:
  deploy:
    runs-on: raspberrypi
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libatomic1 ssh sshpass
      - name: Import Vault Secrets
        uses: hashicorp/vault-action@v3.0.0
        with:
          url: http://144.24.128.195:8200
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            secret/data/utility-scheduler deploy-server-host | DEPLOY_SERVER_HOST ;
            secret/data/utility-scheduler deploy-server-user | DEPLOY_SERVER_USER ;
            secret/data/utility-scheduler deploy-server-password | DEPLOY_SERVER_PASSWORD
      - name: Undeploy app
        run: |
          sshpass -p ${{ env.DEPLOY_SERVER_PASSWORD }} ssh -q -oStrictHostKeyChecking=no ${{ env.DEPLOY_SERVER_USER }}@${{ env.DEPLOY_SERVER_HOST }} docker stop utility-scheduler
          sshpass -p ${{ env.DEPLOY_SERVER_PASSWORD }} ssh -q -oStrictHostKeyChecking=no ${{ env.DEPLOY_SERVER_USER }}@${{ env.DEPLOY_SERVER_HOST }} docker rm utility-scheduler
          sshpass -p ${{ env.DEPLOY_SERVER_PASSWORD }} ssh -q -oStrictHostKeyChecking=no ${{ env.DEPLOY_SERVER_USER }}@${{ env.DEPLOY_SERVER_HOST }} docker rmi shankershawn/utility-scheduler
      - name: Deploy app
        run: |
          sshpass -p ${{ env.DEPLOY_SERVER_PASSWORD }} ssh -q -oStrictHostKeyChecking=no ${{ env.DEPLOY_SERVER_USER }}@${{ env.DEPLOY_SERVER_HOST }} docker pull shankershawn/utility-scheduler:latest
          sshpass -p ${{ env.DEPLOY_SERVER_PASSWORD }} ssh -q -oStrictHostKeyChecking=no ${{ env.DEPLOY_SERVER_USER }}@${{ env.DEPLOY_SERVER_HOST }} docker run -tid --restart=always -e "SPRING_PROFILES_ACTIVE=nprod,on-demand,scheduler" -e "VAULT_TOKEN=${{ secrets.VAULT_TOKEN }}" --name=utility-scheduler -p 8081:8080 shankershawn/utility-scheduler:latest
  skip:
    runs-on: raspberrypi
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - run: echo 'The triggering workflow failed'