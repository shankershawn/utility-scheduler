# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle and Docker - Non Prod Deploy

on:
  workflow_run:
    workflows: [ "Java CI with Gradle and Docker - Merge Build" ]
    types:
      - completed
  workflow_dispatch:

permissions:
  contents: read

jobs:
  deploy:

    runs-on: raspberrypi
    
    steps:
      - name: Import Vault Secrets
        uses: hashicorp/vault-action@v2
        with:
          url: http://144.24.128.195:8200
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            secret/data/utility-scheduler deploy-server-ssh-key | DEPLOY_SERVER_SSH_KEY ;
            secret/data/utility-scheduler deploy-server-ssh-passphrase | DEPLOY_SERVER_SSH_PASSPHRASE ;
            secret/data/utility-scheduler deploy-server-host | DEPLOY_SERVER_HOST ;
            secret/data/utility-scheduler deploy-server-user | DEPLOY_SERVER_USER ;
            secret/data/utility-scheduler deploy-server-password | DEPLOY_SERVER_PASSWORD
      - name: Undeploy app
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.DEPLOY_SERVER_HOST }}
          username: ${{ env.DEPLOY_SERVER_USER }}
          #key: ${{ env.DEPLOY_SERVER_SSH_KEY }}
          #passphrase: ${{ env.DEPLOY_SERVER_SSH_PASSPHRASE }}
          password: ${{ env.DEPLOY_SERVER_PASSWORD }}
          script: |
            docker stop utility-scheduler
            docker rm utility-scheduler
      - name: Deploy app
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.DEPLOY_SERVER_HOST }}
          username: ${{ env.DEPLOY_SERVER_USER }}
          #key: ${{ env.DEPLOY_SERVER_SSH_KEY }}
          #passphrase: ${{ env.DEPLOY_SERVER_SSH_PASSPHRASE }}
          password: ${{ env.DEPLOY_SERVER_PASSWORD }}
          script: |
            docker pull shankershawn/utility-scheduler:latest
            docker run -tid --restart=always -e "SPRING_PROFILES_ACTIVE=nprod,on-demand,scheduler" -e "VAULT_TOKEN=${{ secrets.VAULT_TOKEN }}" --name=utility-scheduler -p 8081:8080 shankershawn/utility-scheduler:latest
