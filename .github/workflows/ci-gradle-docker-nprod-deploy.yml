# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle and Docker - Non Prod Deploy

on:
  workflow_run:
    workflows: [ "Java CI with Gradle and Docker - Merge Build" ]
    types:
      - completed

permissions:
  contents: read

jobs:
  deploy:
  
    runs-on: ubuntu-latest
    
    steps:
    - name: Import Vault Secrets
      uses: hashicorp/vault-action@v2
      with:
        url: http://144.24.128.195:8200
        token: ${{ secrets.VAULT_TOKEN }}
        secrets: |
          secret/data/utility-scheduler oci-instance-20230319-1325-ssh-key | OCI_INSTANCE_20230319_1325_SSH_KEY ;
          secret/data/utility-scheduler oci-instance-20230319-1325-ssh-public-key | OCI_INSTANCE_20230319_1325_SSH_PUBLIC_KEY ;
          secret/data/utility-scheduler oci-instance-20230319-1325-ssh-passphrase | OCI_INSTANCE_20230319_1325_SSH_PASSPHRASE ;
          secret/data/utility-scheduler oci-instance-20230319-1325-host | OCI_INSTANCE_20230319_1325_HOST ;
          secret/data/utility-scheduler oci-instance-20230319-1325-user | OCI_INSTANCE_20230319_1325_USER
    - name: Configure ssh
      run: |
        sudo apt-get update -y
        sudo apt-get install ssh -y
        
        mkdir -p ~/.ssh/
        SSH_ASKPASS_SCRIPT=~/.ssh/askpass
        touch ${SSH_ASKPASS_SCRIPT}
        chmod 777 ${SSH_ASKPASS_SCRIPT}
        echo \#\!/bin/bash > ${SSH_ASKPASS_SCRIPT}
        echo echo "${{ env.OCI_INSTANCE_20230319_1325_SSH_PASSPHRASE }}" >> ${SSH_ASKPASS_SCRIPT}
        export DISPLAY=:0
        export SSH_ASKPASS=${SSH_ASKPASS_SCRIPT}
        
        cat ${SSH_ASKPASS_SCRIPT}
        
        echo "${{ env.OCI_INSTANCE_20230319_1325_SSH_KEY }}" > ~/.ssh/OCI_INSTANCE_20230319_1325
        echo "${{ env.OCI_INSTANCE_20230319_1325_SSH_PUBLIC_KEY }}" > ~/.ssh/OCI_INSTANCE_20230319_1325.pub
        chmod 600 ~/.ssh/OCI_INSTANCE_20230319_1325
        chmod 600 ~/.ssh/OCI_INSTANCE_20230319_1325.pub
        
        echo Host OCI_INSTANCE_20230319_1325 > ~/.ssh/config
        echo HostName ${{ env.OCI_INSTANCE_20230319_1325_HOST }} >> ~/.ssh/config
        echo User ${{ env.OCI_INSTANCE_20230319_1325_USER }} >> ~/.ssh/config
        echo IdentityFile ~/.ssh/OCI_INSTANCE_20230319_1325 >> ~/.ssh/config
        echo StrictHostKeyChecking no >> ~/.ssh/config
        chmod 600 ~/.ssh/config
    - name: Undeploy app
      run: |
        setsid ssh OCI_INSTANCE_20230319_1325 "docker stop utility-scheduler && docker rm utility-scheduler" > /dev/null
        sleep 30
    - name: Deploy app
      run: |
        setsid ssh OCI_INSTANCE_20230319_1325 "docker pull shankershawn/utility-scheduler:latest && docker run -tid -e "VAULT_TOKEN=${{ secrets.VAULT_TOKEN }}" --name=utility-scheduler -p 8081:8080 shankershawn/utility-scheduler:latest"
      
