# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle and Docker - Merge Build

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - .github/workflows/*

permissions:
  contents: read

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Install libatomic
        run: sudo apt-get update -y && sudo apt-get install libatomic1
  build-and-test:
    runs-on: ubuntu-latest
    needs:
      - setup
    steps:
      - name: Import Vault Secrets
        uses: hashicorp/vault-action@v3.0.0
        with:
          url: http://144.24.128.195:8200
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            secret/data/com-shankarsan artifactory-url | ARTIFACTORY_URL ;
            secret/data/com-shankarsan artifactory-username | ARTIFACTORY_USERNAME ;
            secret/data/com-shankarsan artifactory-password | ARTIFACTORY_PASSWORD ;
            secret/data/com-shankarsan sonar-token | SONAR_TOKEN ;
            secret/data/com-shankarsan sonar-host-url | SONAR_HOST_URL
      - name: Set up JDK 17
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Code checkout
        uses: actions/checkout@v4.1.6
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: clean build -x sonar --stacktrace
        env:
          RUN_NUMBER: ${{ github.run_number }}
  sonar-scan:
    runs-on: ubuntu-latest
    needs:
      - build-and-test
    steps:
      - name: Import Vault Secrets
        uses: hashicorp/vault-action@v3.0.0
        with:
          url: http://144.24.128.195:8200
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            secret/data/com-shankarsan artifactory-url | ARTIFACTORY_URL ;
            secret/data/com-shankarsan artifactory-username | ARTIFACTORY_USERNAME ;
            secret/data/com-shankarsan artifactory-password | ARTIFACTORY_PASSWORD ;
            secret/data/com-shankarsan sonar-token | SONAR_TOKEN ;
            secret/data/com-shankarsan sonar-host-url | SONAR_HOST_URL
      - name: Set up JDK 17
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Code checkout
        uses: actions/checkout@v4.1.6
      - name: Sonarqube Scan
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        env:
          RUN_NUMBER: ${{ github.run_number }}
        with:
          arguments: sonar --stacktrace
  docker-build:
    runs-on: ubuntu-latest
    needs:
      - sonar-scan
    steps:
      - name: Import Vault Secrets
        uses: hashicorp/vault-action@v3.0.0
        with:
          url: ${{ secrets.VAULT_URL }}
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            secret/data/com-shankarsan docker-hub-token | DOCKER_HUB_TOKEN ;
            secret/data/com-shankarsan artifactory-url | ARTIFACTORY_URL ;
            secret/data/com-shankarsan artifactory-username | ARTIFACTORY_USERNAME ;
            secret/data/com-shankarsan artifactory-password | ARTIFACTORY_PASSWORD ;
            secret/data/com-shankarsan ssl-keystore-base64 | SSL_KEYSTORE_BASE64 ;
      - name: Code checkout
        uses: actions/checkout@v4.1.6
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0
      - name: Docker Hub Login
        uses: docker/login-action@v3.1.0
        with:
          username: shankershawn
          password: ${{ env.DOCKER_HUB_TOKEN }}
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6.5.0
        with:
          no-cache: true
          context: .
          platforms: linux/amd64,linux/arm64/v8,linux/arm/v7
          push: true
          build-args: |
            RUN_NUMBER=${{ github.run_number }}
            ARTIFACTORY_URL=${{ env.ARTIFACTORY_URL }}
            ARTIFACTORY_USERNAME=${{ env.ARTIFACTORY_USERNAME }}
            ARTIFACTORY_PASSWORD=${{ env.ARTIFACTORY_PASSWORD }}
            SSL_KEYSTORE_BASE64=${{ env.SSL_KEYSTORE_BASE64 }}
          tags: shankershawn/utility-scheduler:${{ github.sha }},shankershawn/utility-scheduler:latest
  publish-to-artifactory:
    runs-on: ubuntu-latest
    needs:
      - sonar-scan
    steps:
      - name: Import Vault Secrets
        uses: hashicorp/vault-action@v3.0.0
        with:
          url: http://144.24.128.195:8200
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            secret/data/com-shankarsan artifactory-url | ARTIFACTORY_URL ;
            secret/data/com-shankarsan artifactory-username | ARTIFACTORY_USERNAME ;
            secret/data/com-shankarsan artifactory-password | ARTIFACTORY_PASSWORD ;
            secret/data/com-shankarsan sonar-token | SONAR_TOKEN ;
            secret/data/com-shankarsan sonar-host-url | SONAR_HOST_URL
      - name: Set up JDK 17
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Code checkout
        uses: actions/checkout@v4.1.6
      - name: Publish to Sonatype
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        env:
          RUN_NUMBER: ${{ github.run_number }}
        with:
          arguments:
            publish --stacktrace
