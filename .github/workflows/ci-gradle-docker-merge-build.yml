# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle and Docker - Merge Build

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  runs-on: ubuntu-latest
  prep:
    name: Prepare
    steps:
      - name: Import Vault Secrets
        uses: hashicorp/vault-action@v2
        with:
          url: ${{ secrets.VAULT_URL }}
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            secret/data/com-shankarsan artifactory-url | ARTIFACTORY_URL ;
            secret/data/com-shankarsan artifactory-username | ARTIFACTORY_USERNAME ;
            secret/data/com-shankarsan artifactory-password | ARTIFACTORY_PASSWORD ;
            secret/data/com-shankarsan docker-hub-token | DOCKER_HUB_TOKEN ;
            secret/data/com-shankarsan sonar-token | SONAR_TOKEN ;
            secret/data/com-shankarsan sonar-host-url | SONAR_HOST_URL
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker Hub Login
        uses: docker/login-action@v2
        with:
          username: shankershawn
          password: ${{ env.DOCKER_HUB_TOKEN }}
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
  build:
    name: Build
    needs: prepare
    steps:
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: clean build
        env:
          GITHUB_VERSION: ${{ github.sha }}
  sonar:
    name: Sonar Check
    needs: build
    steps:
      - name: Sonarqube Scan
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        env:
          GITHUB_VERSION: ${{ github.sha }}
        with:
          arguments: sonar --stacktrace
  publish:
    name: Publish to Sonatype
    needs: sonar
    steps:
      - name: Publish to Sonatype
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        env:
          GITHUB_VERSION: ${{ github.sha }}
        with:
          arguments:
            publish
  docker-image-build:
    name: Create Docker image
    needs: sonar
    steps:
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64/v8,linux/arm/v7
          push: true
          build-args: GITHUB_SHA=${{ github.sha }}
          tags: shankershawn/utility-scheduler:${{ github.sha }},shankershawn/utility-scheduler:latest
