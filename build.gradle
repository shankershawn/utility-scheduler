plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.6'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'maven-publish'
	id 'org.sonarqube' version '5.0.0.4638'
	id 'jacoco'
	id 'checkstyle'
}

group = 'com.shankarsan'
version = '1.0.0_' + System.getenv("GITHUB_VERSION")

java {
	sourceCompatibility = '17'
}

apply from: 'gradle/sonar.gradle'
apply from: 'gradle/coverage.gradle'
apply from: 'gradle/checkstyle.gradle'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
	maven {
		url = System.getenv("ARTIFACTORY_URL") ?: "${ARTIFACTORY_URL}"
		credentials {
			username System.getenv("ARTIFACTORY_USERNAME") ?: "${ARTIFACTORY_USERNAME}"
			password System.getenv("ARTIFACTORY_PASSWORD") ?: "${ARTIFACTORY_PASSWORD}"
		}
		allowInsecureProtocol true
	}
}

ext {
	set('springCloudVersion', "2022.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.springframework.retry:spring-retry'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.vault:spring-vault-core'
	implementation 'com.shankarsan:dropbox-service:1.0.0+'
	implementation 'com.j2html:j2html:1.6.0'

	compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.awaitility:awaitility:4.2.1'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

publishing {
	publications {
		maven(MavenPublication) {
			groupId 'com.shankarsan'
			artifactId 'utility-scheduler'
			version '1.0.0_' + System.getenv("GITHUB_VERSION")
			from components.java
		}
	}
	repositories {
		maven {
			url = System.getenv("ARTIFACTORY_URL") ?: "${ARTIFACTORY_URL}"
			credentials {
				username System.getenv("ARTIFACTORY_USERNAME") ?: "${ARTIFACTORY_USERNAME}"
				password System.getenv("ARTIFACTORY_PASSWORD") ?: "${ARTIFACTORY_PASSWORD}"
			}
			allowInsecureProtocol true
		}
	}
}
